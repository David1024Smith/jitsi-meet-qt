@echo off
REM Jitsi Meet Qt - 配置脚本
REM 自动检测和配置构建环境

setlocal enabledelayedexpansion

echo ========================================
echo Jitsi Meet Qt - Configuration Script
echo ========================================

REM 默认配置
set BUILD_TYPE=Release
set QT_VERSION=5.15.2
set MINGW_VERSION=810
set AUTO_DETECT=1

REM 可能的Qt安装路径
set QT_PATHS[0]=C:\Qt\%QT_VERSION%\mingw81_64
set QT_PATHS[1]=C:\Qt\Qt%QT_VERSION%\%QT_VERSION%\mingw81_64
set QT_PATHS[2]=D:\Qt\%QT_VERSION%\mingw81_64
set QT_PATHS[3]=E:\Qt\%QT_VERSION%\mingw81_64

REM 可能的MinGW安装路径
set MINGW_PATHS[0]=C:\Qt\Tools\mingw810_64
set MINGW_PATHS[1]=C:\Qt\Qt%QT_VERSION%\Tools\mingw810_64
set MINGW_PATHS[2]=C:\mingw64
set MINGW_PATHS[3]=C:\msys64\mingw64

echo Detecting build environment...

REM 检测Qt安装
set QT_FOUND=0
for /L %%i in (0,1,3) do (
    if exist "!QT_PATHS[%%i]!\bin\qmake.exe" (
        set QT_DIR=!QT_PATHS[%%i]!
        set QT_FOUND=1
        echo Found Qt at: !QT_DIR!
        goto :qt_found
    )
)

:qt_found
if %QT_FOUND%==0 (
    echo Error: Qt %QT_VERSION% not found in standard locations
    echo Please install Qt %QT_VERSION% with MinGW or set QT_DIR manually
    echo.
    echo Standard installation locations checked:
    for /L %%i in (0,1,3) do echo   !QT_PATHS[%%i]!
    pause
    exit /b 1
)

REM 检测MinGW安装
set MINGW_FOUND=0
for /L %%i in (0,1,3) do (
    if exist "!MINGW_PATHS[%%i]!\bin\gcc.exe" (
        set MINGW_DIR=!MINGW_PATHS[%%i]!
        set MINGW_FOUND=1
        echo Found MinGW at: !MINGW_DIR!
        goto :mingw_found
    )
)

:mingw_found
if %MINGW_FOUND%==0 (
    echo Error: MinGW compiler not found in standard locations
    echo Please install MinGW or set MINGW_DIR manually
    echo.
    echo Standard installation locations checked:
    for /L %%i in (0,1,3) do echo   !MINGW_PATHS[%%i]!
    pause
    exit /b 1
)

REM 检测CMake
cmake --version >nul 2>&1
if errorlevel 1 (
    echo Error: CMake not found in PATH
    echo Please install CMake and add it to your PATH
    pause
    exit /b 1
)

echo Found CMake: 
cmake --version | findstr "cmake version"

REM 检测NSIS（用于创建安装程序）
makensis /VERSION >nul 2>&1
if errorlevel 1 (
    echo Warning: NSIS not found - installer creation will be disabled
    set NSIS_AVAILABLE=0
) else (
    echo Found NSIS: 
    makensis /VERSION
    set NSIS_AVAILABLE=1
)

REM 检测代码签名工具
set SIGNTOOL_PATHS[0]=C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe
set SIGNTOOL_PATHS[1]=C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe
set SIGNTOOL_PATHS[2]=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\signtool.exe

set SIGNTOOL_FOUND=0
for /L %%i in (0,1,2) do (
    if exist "!SIGNTOOL_PATHS[%%i]!" (
        set SIGNTOOL_PATH=!SIGNTOOL_PATHS[%%i]!
        set SIGNTOOL_FOUND=1
        echo Found SignTool at: !SIGNTOOL_PATH!
        goto :signtool_found
    )
)

:signtool_found
if %SIGNTOOL_FOUND%==0 (
    echo Warning: SignTool not found - code signing will be disabled
)

echo.
echo ========================================
echo Configuration Summary
echo ========================================
echo Qt Directory: %QT_DIR%
echo MinGW Directory: %MINGW_DIR%
echo Build Type: %BUILD_TYPE%
echo NSIS Available: %NSIS_AVAILABLE%
echo SignTool Available: %SIGNTOOL_FOUND%

REM 创建配置文件
echo Creating build configuration...
(
echo # Jitsi Meet Qt Build Configuration
echo # Generated by configure.bat
echo.
echo set QT_DIR=%QT_DIR%
echo set MINGW_DIR=%MINGW_DIR%
echo set BUILD_TYPE=%BUILD_TYPE%
echo set NSIS_AVAILABLE=%NSIS_AVAILABLE%
echo set SIGNTOOL_FOUND=%SIGNTOOL_FOUND%
if %SIGNTOOL_FOUND%==1 echo set SIGNTOOL_PATH=%SIGNTOOL_PATH%
echo.
echo # Environment setup
echo set PATH=%%QT_DIR%%\bin;%%MINGW_DIR%%\bin;%%PATH%%
echo set CMAKE_PREFIX_PATH=%%QT_DIR%%
) > build_config.bat

echo Configuration saved to: build_config.bat

REM 验证依赖项
echo.
echo ========================================
echo Verifying Dependencies
echo ========================================

REM 设置临时环境
set PATH=%QT_DIR%\bin;%MINGW_DIR%\bin;%PATH%

REM 检查编译器版本
echo Checking compiler version...
gcc --version | findstr "gcc"
if errorlevel 1 (
    echo Error: GCC compiler not working
    pause
    exit /b 1
)

REM 检查Qt版本
echo Checking Qt version...
qmake -query QT_VERSION
if errorlevel 1 (
    echo Error: Qt qmake not working
    pause
    exit /b 1
)

REM 检查必要的Qt模块
echo Checking Qt modules...
set QT_MODULES=Core Widgets Network WebSockets Multimedia MultimediaWidgets Xml
for %%m in (%QT_MODULES%) do (
    if not exist "%QT_DIR%\lib\Qt5%%m.dll" (
        echo Warning: Qt5%%m module not found
    ) else (
        echo   Qt5%%m: OK
    )
)

echo.
echo ========================================
echo Configuration completed successfully!
echo ========================================
echo.
echo Next steps:
echo 1. Run build-cmake.bat to build the project
echo 2. Run deploy.bat to create deployment package
if %NSIS_AVAILABLE%==1 echo 3. Run package.bat to create installer
if %SIGNTOOL_FOUND%==1 echo 4. Run sign.bat to sign executables
echo.

pause
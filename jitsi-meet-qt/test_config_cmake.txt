# CMake configuration for ConfigurationManager test
cmake_minimum_required(VERSION 3.16)
project(ConfigurationManagerTest)

# Set C++17 standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find Qt6
find_package(Qt6 REQUIRED COMPONENTS Core)

# Include directories
include_directories(include)
include_directories(include/models)

# Source files
set(SOURCES
    test_configuration_manager.cpp
    src/ConfigurationManager.cpp
    src/models/ApplicationSettings.cpp
    src/WindowStateManager.cpp
)

# Header files
set(HEADERS
    include/ConfigurationManager.h
    include/models/ApplicationSettings.h
    include/WindowStateManager.h
    include/JitsiConstants.h
)

# Create executable
add_executable(config_test ${SOURCES} ${HEADERS})

# Link Qt6
target_link_libraries(config_test Qt6::Core)

# Set compiler flags for C++17
if(MSVC)
    target_compile_options(config_test PRIVATE /std:c++17)
else()
    target_compile_options(config_test PRIVATE -std=c++17)
endif()

# Enable Qt MOC
set_target_properties(config_test PROPERTIES
    AUTOMOC ON
)